"use strict";angular.module("zooStoryApp",["ngCookies","ngResource","ngSanitize","ngRoute"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("zooStoryApp").factory("Zoo",function(){function ZooPart(theId,theType,theSize,thePos,theColor,theController){this.id=theId,this.type=theType,this.size=theSize,this.pos=thePos,this.color=theColor,this.controller=theController,this.getCoordinates=function(){var coordinates=[[this.pos[0],this.pos[1]+this.size[1]],[this.pos[0]+this.size[0],this.pos[1]+this.size[1]],[this.pos[0]+this.size[0],this.pos[1]],[this.pos[0],this.pos[1]]];return coordinates},this.checkIfCollide=function(obj2){var points=this.getCoordinates();return points[1][0]>obj2.getCoordinates()[0][0]&&points[0][0]<obj2.getCoordinates()[0][0]?obj2:points[1][0]>obj2.getCoordinates()[1][0]&&points[0][0]<obj2.getCoordinates()[1][0]?obj2:!1}}return ZooPart.prototype={constructor:ZooPart,tell:function(attr){console.log(attr+" property is "+this[attr])},moves:"obstacle"!==this.type},ZooPart}).factory("Hero",["Zoo",function(Zoo){var theHero=angular.copy(Zoo);return theHero.prototype={run:function(){},shoot:function(){console.log("phew phew")}},theHero}]).factory("ZooKeeper",["Zoo",function(Zoo){var Keeper=angular.copy(Zoo);return Keeper}]).factory("ZooKeeperZombie",["ZooKeeper",function(ZooKeeper){var KeeperZombie=angular.copy(ZooKeeper);return KeeperZombie.prototype={doCrazyStuff:function(){}},KeeperZombie}]).factory("Exit",["Zoo",function(Zoo){var Gate=angular.copy(Zoo);return Gate.prototype={winGame:function(){console.log("You won")}},Gate}]).controller("MainCtrl",["$scope","$document","Zoo","ZooKeeper","ZooKeeperZombie","Hero","Exit",function($scope,$document,Zoo,ZooKeeper,ZooKeeperZombie,Hero,Exit){function HeroCtrl($element,$document,$scope){$document.on("keydown",function(){if(37===event.keyCode){var left=parseInt($element.css("left"));if(myhero.pos[0]=left,0>left)return;$element.css("left",left-4);for(var z=1;z<$scope.ZooParts.length;z++){var contactType=myhero.checkIfCollide($scope.ZooParts[z]);if("obstacle"===contactType.type)return contactType.pos[0]<$element.top&&console.log("jumping over"),void console.log("you ran into a rock");if("enemy"===contactType.type)return console.log("oh you died sorry"),myhero.pos[0]=0,myhero.pos[1]=0,void $element.css("opacity",.3)}}if(39===event.keyCode){if(left=parseInt($element.css("left")),myhero.pos[0]=left,left>940-myhero.size[0])return;for(var y=1;y<$scope.ZooParts.length;y++){if(contactType=myhero.checkIfCollide($scope.ZooParts[y]),console.log("rock",contactType.pos[0]),"obstacle"===contactType.type)return void console.log("you ran into a rock");if("enemy"===contactType.type)return console.log("oh you died sorry"),myhero.pos[0]=0,myhero.pos[1]=0,void $element.css("opacity",.3)}$element.css("left",left+4)}if(38===event.keyCode){event.preventDefault();var top=parseInt($element.css("top"));myhero.pos[1]=top,console.log(top),$element.css("top",top-60),setTimeout(function(){return top=parseInt($element.css("top")),myhero.pos[1]=top,$element.css("top",top+60),top>480?(console.log("test"),$element.css("top",480),void(myhero.pos[1]=480)):void 0},700)}})}function KeeperCtrl($element){setInterval(function(){return $element.hasClass("moveright")?void $element.removeClass("moveright"):void $element.addClass("moveright")},1200)}function ObstacleCtrl(){}function ExitCtrl(){}var myhero=new Hero("monkeyMike","hero",[20,60],[10,480],"#a87d20",HeroCtrl);$scope.ZooParts=[myhero,new ZooKeeper("zooKeeper","enemy",[30,70],[420,470],"blue",KeeperCtrl),new ZooKeeper("zooKeeper2","enemy",[30,70],[580,210],"blue",KeeperCtrl),new ZooKeeperZombie("zooKeeper3","enemy",[25,60],[240,480],"blue",KeeperCtrl),new Zoo("rock","obstacle",[40,40],[370,500],"black",ObstacleCtrl),new Zoo("rock","obstacle",[80,40],[130,500],"black",ObstacleCtrl),new Zoo("rock","obstacle",[120,40],[570,500],"black",ObstacleCtrl),new Zoo("rock","obstacle",[240,20],[540,280],"black",ObstacleCtrl),new Zoo("rock","obstacle",[180,20],[760,420],"black",ObstacleCtrl),new Exit("GoldenGate","exit",[40,80],[880,340],"#eef26b",ExitCtrl)]}]);