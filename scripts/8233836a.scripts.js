"use strict";angular.module("zooStoryApp",["ngCookies","ngResource","ngSanitize","ngRoute"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("zooStoryApp").factory("Zoo",function(){function ZooPart(theId,theType,theSize,thePos,theColor,theController){this.id=theId,this.type=theType,this.size=theSize,this.pos=thePos,this.color=theColor,this.controller=theController,this.getCoordinates=function(){var coordinates=[[this.pos[0],this.pos[1]+this.size[1]],[this.pos[0]+this.size[0],this.pos[1]+this.size[1]],[this.pos[0]+this.size[0],this.pos[1]],[this.pos[0],this.pos[1]]];return coordinates},this.checkIfCollide=function(obj2){var points=this.getCoordinates(),atLevelAndTouchesRight=points[1][0]>obj2.getCoordinates()[0][0]&&points[0][0]<obj2.getCoordinates()[0][0]&&points[0][1]<=obj2.getCoordinates()[0][1],atLevelAndTouchesLeft=points[1][0]>obj2.getCoordinates()[1][0]&&points[0][0]<obj2.getCoordinates()[1][0]&&points[0][1]<=obj2.getCoordinates()[0][1];return atLevelAndTouchesRight?(this.active=!0,obj2):atLevelAndTouchesLeft?(this.active=!0,obj2):!1}}return ZooPart.prototype={constructor:ZooPart,tell:function(attr){console.log(attr+" property is "+this[attr])},moves:"obstacle"!==this.type,active:!1},ZooPart}).factory("Hero",["Zoo",function(Zoo){var theHero=angular.copy(Zoo);return theHero}]).factory("ZooKeeper",["Zoo",function(Zoo){var Keeper=angular.copy(Zoo);return Keeper.trailer=40,Keeper.prototype={constructor:Keeper,trail:40},Keeper}]).factory("ZooKeeperZombie",["ZooKeeper",function(ZooKeeper){var KeeperZombie=angular.copy(ZooKeeper);return KeeperZombie.prototype={doCrazyStuff:function(){}},KeeperZombie}]).factory("Exit",["Zoo",function(Zoo){var Gate=angular.copy(Zoo);return Gate}]).controller("MainCtrl",["$scope","$document","Zoo","ZooKeeper","ZooKeeperZombie","Hero","Exit",function($scope,$document,Zoo,ZooKeeper,ZooKeeperZombie,Hero,Exit){function HeroCtrl($element,$document,$scope){myhero.node=$element,$document.on("keydown",function(){if(37===event.keyCode){var left=parseInt($element.css("left"));if(myhero.pos[0]=left,0>left)return;for(var z=1;z<$scope.ZooParts.length;z++){var contactType=myhero.checkIfCollide($scope.ZooParts[z]);if("obstacle"===contactType.type)return;"enemy"===contactType.type&&(console.log("oh you died sorry"),$element.css("opacity",.8))}$element.css("left",left-$scope.step)}if(39===event.keyCode){if(left=parseInt($element.css("left")),myhero.pos[0]=left,left>940-myhero.size[0])return;for(var y=1;y<$scope.ZooParts.length;y++){var contactType=myhero.checkIfCollide($scope.ZooParts[y]);if("obstacle"===contactType.type)return;"enemy"===contactType.type&&(console.log("oh you died sorry"),$element.css("opacity",.3))}$element.css("left",left+$scope.step)}if(38===event.keyCode){if(event.preventDefault(),$element.hasClass("jump"))return void $element.removeClass("jump");$element.addClass("jump"),setTimeout(function(){$element.removeClass("jump")},800)}})}function KeeperCtrl($element){setInterval(function(){return $element.hasClass("enemy")?void $element.removeClass("enemy"):void $element.addClass("enemy")},1400)}function ObstacleCtrl($element,$scope,$document){$document.on("keydown",function(){for(var objPair,positionX=parseInt($element.css("left")),positionY=parseInt($element.css("top")),z=0;z<$scope.ZooParts.length;z++)positionX===$scope.ZooParts[z].pos[0]&&positionY===$scope.ZooParts[z].pos[1]&&(objPair=$scope.ZooParts[z],positionY+=objPair.size[1]);if(37===event.keyCode||38===event.keyCode||39===event.keyCode){var solidLevel=objPair.checkIfCollide(myhero);if(myhero.node.hasClass("jump")&&(myhero.pos[1]=myhero.pos[1]+50),solidLevel){myhero.pos[1]+myhero.size[1]>positionY&&(objPair.active=!0,solidLevel.pos[1]=positionY-objPair.size[1],solidLevel.node.css("top",myhero.pos[1]-myhero.size[1]));var heroDrops=solidLevel.pos[0]+solidLevel.size[0]-$scope.step<objPair.pos[0]||solidLevel.pos[0]+$scope.step>=objPair.pos[0]+objPair.size[0];heroDrops&&(myhero.pos[1]=450,myhero.node.css("top","450px"))}}})}function ExitCtrl($element,$scope,$document){$document.on("keydown",function(){myhero.pos[0]+myhero.size[0]>$scope.ZooParts[$scope.ZooParts.length-1].pos[0]&&$element.parent().parent().find("h1").addClass("win").html("You won! Reload the page to play again.")})}var myhero=new Hero("monkeyMike","hero",[60,70],[30,450],"transparent",HeroCtrl);$scope.step=4,$scope.ZooParts=[myhero,new ZooKeeper("zooKeeper","enemy",[30,70],[420,450],"blue",KeeperCtrl),new ZooKeeper("zooKeeper2","enemy",[30,70],[580,190],"blue",KeeperCtrl),new ZooKeeperZombie("zooKeeper3","enemy",[25,30],[240,480],"blue",KeeperCtrl),new Zoo("rock1","obstacle",[140,20],[330,410],"black",ObstacleCtrl),new Zoo("rock2","obstacle",[80,40],[130,480],"black",ObstacleCtrl),new Zoo("rock","obstacle",[120,40],[570,480],"black",ObstacleCtrl),new Zoo("rock","obstacle",[240,20],[540,260],"black",ObstacleCtrl),new Zoo("rock","obstacle",[180,20],[760,400],"black",ObstacleCtrl),new Exit("GoldenGate","exit",[100,80],[840,320],"transparent",ExitCtrl)]}]);